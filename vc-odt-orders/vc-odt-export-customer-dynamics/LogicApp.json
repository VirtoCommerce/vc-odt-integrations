{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "logicAppName": {
      "type": "string",
      "minLength": 1,
      "maxLength": 80,
      "metadata": {
        "description": "Name of the Logic App."
      }
    },
    "logicAppLocation": {
      "type": "string",
      "defaultValue": "[resourceGroup().location]",
      "allowedValues": [
        "[resourceGroup().location]",
        "eastasia",
        "southeastasia",
        "centralus",
        "eastus",
        "eastus2",
        "westus",
        "northcentralus",
        "southcentralus",
        "northeurope",
        "westeurope",
        "japanwest",
        "japaneast",
        "brazilsouth",
        "australiaeast",
        "australiasoutheast",
        "southindia",
        "centralindia",
        "westindia",
        "canadacentral",
        "canadaeast",
        "uksouth",
        "ukwest",
        "westcentralus",
        "westus2",
        "koreacentral",
        "koreasouth",
        "francecentral",
        "francesouth",
        "uaecentral",
        "southafricanorth",
        "southafricawest"
      ],
      "metadata": {
        "description": "Location of the Logic App."
      }
    },
    "organizationNameParam": {
      "type": "string",
      "defaultValue": "org363c224b.crm"
    },
    "dynamicscrmonline_1_Connection_Name": {
      "type": "string",
      "defaultValue": "dynamicscrmonline-1"
    },
    "dynamicscrmonline_1_Connection_DisplayName": {
      "type": "string",
      "defaultValue": "mko@virtoway.com"
    },
    "dynamicscrmonline_1_token:TenantId": {
      "type": "string",
      "metadata": {
        "description": "The tenant ID for the Azure Active Directory application"
      }
    }
  },
  "variables": {},
  "resources": [
    {
      "name": "[parameters('logicAppName')]",
      "type": "Microsoft.Logic/workflows",
      "location": "[parameters('logicAppLocation')]",
      "tags": {
        "displayName": "LogicApp"
      },
      "apiVersion": "2016-06-01",
      "properties": {
        "definition": {
          "$schema": "https://schema.management.azure.com/providers/Microsoft.Logic/schemas/2016-06-01/workflowdefinition.json#",
          "actions": {
            "Response": {
              "type": "Response",
              "inputs": {
                "statusCode": 200,
                "headers": {
                  "Content-Type": "application/json"
                },
                "body": {
                  "accountid": "@variables('accountId')"
                }
              },
              "runAfter": {
                "Condition": [
                  "Succeeded"
                ]
              }
            },
            "HTTP_Get_member": {
              "type": "Http",
              "inputs": {
                "method": "get",
                "uri": "@{concat(triggerBody()?['connection']?['endpointUrl'],'api/members/',encodeURIComponent(triggerBody()?['customerId']))}",
                "headers": {
                  "Authorization": "Bearer @{triggerBody()?['connection']?['accessToken']}",
                  "Content-Type": "application/json"
                }
              },
              "runAfter": {
                "Initialize_accountId": [
                  "Succeeded"
                ]
              },
              "metadata": {
                "apiDefinitionUrl": "@concat(triggerBody()?['connection']?['endpointUrl'],'docs/VirtoCommerce.Customer/swagger.json')",
                "swaggerSource": "custom"
              }
            },
            "List_accounts": {
              "type": "ApiConnection",
              "inputs": {
                "host": {
                  "connection": {
                    "name": "@parameters('$connections')['dynamicscrmonline']['connectionId']"
                  }
                },
                "method": "get",
                "path": "/datasets/@{encodeURIComponent(encodeURIComponent(parameters('organizationName')))}/tables/@{encodeURIComponent(encodeURIComponent('accounts'))}/items",
                "queries": {
                  "$filter": "name eq '@{triggerBody()?['customerName']}'"
                }
              },
              "runAfter": {
                "HTTP_Get_member": [
                  "Succeeded"
                ]
              }
            },
            "Condition": {
              "type": "If",
              "expression": {
                "and": [
                  {
                    "equals": [
                      "@empty(body('List_accounts')?['value'])",
                      "@true"
                    ]
                  }
                ]
              },
              "actions": {
                "Create_a_new_account": {
                  "type": "ApiConnection",
                  "inputs": {
                    "host": {
                      "connection": {
                        "name": "@parameters('$connections')['dynamicscrmonline']['connectionId']"
                      }
                    },
                    "method": "post",
                    "body": {
                      "name": "@{triggerBody()?['customerName']}",
                      "merged": false,
                      "emailaddress1": "@{if(empty(body('HTTP_Get_member')?['emails']),null,first(body('HTTP_Get_member')?['emails']))}"
                    },
                    "path": "/datasets/@{encodeURIComponent(encodeURIComponent(parameters('organizationName')))}/tables/@{encodeURIComponent(encodeURIComponent('accounts'))}/items"
                  },
                  "runAfter": {}
                },
                "Set_new_accountId": {
                  "type": "SetVariable",
                  "inputs": {
                    "name": "accountId",
                    "value": "@{body('Create_a_new_account')?['accountid']}"
                  },
                  "runAfter": {
                    "Create_a_new_account": [
                      "Succeeded"
                    ]
                  }
                }
              },
              "runAfter": {
                "List_accounts": [
                  "Succeeded"
                ]
              },
              "else": {
                "actions": {
                  "Set_accountId": {
                    "type": "SetVariable",
                    "inputs": {
                      "name": "accountId",
                      "value": "@{first(body('List_accounts')?['value'])?['accountid']}"
                    },
                    "runAfter": {}
                  }
                }
              }
            },
            "Initialize_accountId": {
              "type": "InitializeVariable",
              "inputs": {
                "variables": [
                  {
                    "name": "accountId",
                    "type": "string"
                  }
                ]
              },
              "runAfter": {}
            }
          },
          "parameters": {
            "$connections": {
              "defaultValue": {},
              "type": "Object"
            },
            "organizationName": {
              "type": "string"
            }
          },
          "triggers": {
            "request": {
              "type": "Request",
              "kind": "Http",
              "inputs": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "connection": {
                      "type": "object",
                      "properties": {
                        "accessToken": {
                          "type": "string"
                        },
                        "endpointUrl": {
                          "type": "string"
                        }
                      }
                    },
                    "customerId": {
                      "type": "string"
                    },
                    "customerName": {
                      "type": "string"
                    }
                  }
                },
                "method": "POST"
              }
            }
          },
          "contentVersion": "1.0.0.0",
          "outputs": {}
        },
        "parameters": {
          "$connections": {
            "value": {
              "dynamicscrmonline": {
                "id": "[concat(subscription().id, '/providers/Microsoft.Web/locations/', parameters('logicAppLocation'), '/managedApis/', 'dynamicscrmonline')]",
                "connectionId": "[resourceId('Microsoft.Web/connections', parameters('dynamicscrmonline_1_Connection_Name'))]",
                "connectionName": "[parameters('dynamicscrmonline_1_Connection_Name')]"
              }
            }
          },
          "organizationName": {
            "value": "[parameters('organizationNameParam')]"
          }
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Web/connections', parameters('dynamicscrmonline_1_Connection_Name'))]"
      ]
    },
    {
      "type": "MICROSOFT.WEB/CONNECTIONS",
      "apiVersion": "2018-07-01-preview",
      "name": "[parameters('dynamicscrmonline_1_Connection_Name')]",
      "location": "[parameters('logicAppLocation')]",
      "properties": {
        "api": {
          "id": "[concat(subscription().id, '/providers/Microsoft.Web/locations/', parameters('logicAppLocation'), '/managedApis/', 'dynamicscrmonline')]"
        },
        "displayName": "[parameters('dynamicscrmonline_1_Connection_DisplayName')]",
        "nonSecretParameterValues": {
          "token:TenantId": "[parameters('dynamicscrmonline_1_token:TenantId')]"
        }
      }
    }
  ],
  "outputs": {}
}